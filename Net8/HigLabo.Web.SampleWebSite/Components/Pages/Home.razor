@page "/"
@rendermode InteractiveServer

<h2>Sample component</h2>

<div>
    @for (int i = 0; i < 10; i++)
    {
        <span style="display: inline-block; width: 60px; height: 60px;background-color: var(--color-primary-0@(i+1));"></span>
    }
</div>

<div style="width: 80%; margin-bottom: 400px; padding-bottom: 400px;">
    <Button Text="Save"></Button>
    <LoadingPanel></LoadingPanel>
    <FileUploadPanel></FileUploadPanel>

    <InputFieldPanel Text="Field1">
        <InputText @bind-Value="@Value1" class="textbox"></InputText>
    </InputFieldPanel>

    <InputFieldPanel_Record Text="User list" Loading="LoadingRecordList" RecordSelected="RecordSelected">
        <RecordPanel>
            @if (this.SelectedUser == null)
            {
                <div>Select user</div>
            }
            else
            {
                <div style="padding: 4px 8px;">
                    <span class="user-record-panel">@this.SelectedUser.Name</span>
                    <span class="age">@this.SelectedUser.Age</span>
                </div>
            }
        </RecordPanel>
    </InputFieldPanel_Record>

    <InputFieldPanel Text="Field1">
        <InputTextArea @bind-Value="@Value2" class="textarea"></InputTextArea>
    </InputFieldPanel>
   
    <InputFieldPanel_SelectButton Text="file mode" RecordList="InputFieldPanel_SelectButton.CreateRecordList<FileAccess>()"
                                  SelectedValue="@this.FileAccess.ToStringFromEnum()"
                                  ValueChanged="v => this.FileAccess = v.ToEnum<FileAccess>()!.Value"></InputFieldPanel_SelectButton>

    <span>@this.FileAccess.ToStringFromEnum()</span>

    <InputFieldPanel_Date Layout="InputFieldPanelLayout.Default" Text="Date" Value="@this.Date"></InputFieldPanel_Date>
    <InputFieldPanel_DateDuration Text="Start-End" StartDate="@this.StartDate" EndDate="@this.EndDate"></InputFieldPanel_DateDuration>

    <InputFieldPanel_Date Layout="InputFieldPanelLayout.Flex" Text="Date" Value="@this.Date"></InputFieldPanel_Date>
    <InputFieldPanel_DateDuration Layout="InputFieldPanelLayout.Flex" Text="Field4" StartDate="@this.StartDate" EndDate="@this.EndDate"></InputFieldPanel_DateDuration>


    <InputFieldPanel_Color Text="Back color"></InputFieldPanel_Color>
    <InputFieldPanel_Color Layout="InputFieldPanelLayout.Flex" Text="Fore color"></InputFieldPanel_Color>
</div>


@code {
    public class UserRecord
    {
        public string Name { get; set; } = "";
        public int Age { get; set; } = 22;
    }

    [Parameter]
    public string Value1 { get; set; } = "";
    [Parameter]
    public string Value2 { get; set; } = "";

    [Parameter]
    public string Date { get; set; } = "";
    [Parameter]
    public string StartDate { get; set; } = "";
    [Parameter]
    public string EndDate { get; set; } = "";
    [Parameter]
    public FileAccess FileAccess { get; set; }
    [Parameter]
    public bool SelectDateCalendarPanelVisible { get; set; } = false;
    [Parameter]
    public bool SelectDateDurationCalendarPanelVisible { get; set; } = false;

    [Parameter]
    public UserRecord SelectedUser { get; set; } = new() { Name = "Higty", Age = 22 };

    public void DateDurationSelected((DateOnly? StartDate, DateOnly? EndDate) value)
    {
        var v = value;
        if (v.StartDate.HasValue)
        {
            this.StartDate = v.StartDate.Value.ToShortDateString();
        }
        if (v.EndDate.HasValue)
        {
            this.EndDate = v.EndDate.Value.ToShortDateString();
        }
        this.SelectDateDurationCalendarPanelVisible = false;
    }

    private void LoadingRecordList(InputFieldPanel_Record.LoadingEventArgs e)
    {
        var l = new List<InputFieldPanel_Record.Record>();
        l.Clear();
        for (int i = 0; i < 20; i++)
        {
            l.Add(new InputFieldPanel_Record.Record("User" + i, i));
        }

        e.RecordList.Clear();
        if (e.SearchText.IsNullOrEmpty())
        {
            e.RecordList.AddRange(l);
        }
        else
        {
            e.RecordList.AddRange(l.FindAll(el => el.Text.Contains(e.SearchText)));
        }
    }
    private void RecordSelected(InputFieldPanel_Record.Record record)
    {
        var r = new UserRecord();
        r.Name = record.Text;
        r.Age = (int?)record.Value ?? 0;
        this.SelectedUser = r;
    }
}