@page "/"
@rendermode InteractiveServer

<h2>Sample component</h2>

<div>
    @for (int i = 0; i < 10; i++)
    {
        <div style="width: 60px; height: 60px;background-color: var(--color-primary-0@(i+1));"></div>
    }
</div>

<div style="width: 80%; margin-bottom: 400px;">
    <Button Text="Save"></Button>
    <LoadingPanel></LoadingPanel>
    <FileUploadPanel></FileUploadPanel>

    <InputFieldPanel Text="Field1">
        <InputText @bind-Value="@Value1" class="textbox"></InputText>
    </InputFieldPanel>

    <InputFieldPanel Text="Field1">
        <InputTextArea @bind-Value="@Value2" class="textarea"></InputTextArea>
    </InputFieldPanel>

    <InputFieldPanel_SelectButton Text="file mode" RecordList="InputFieldPanel_SelectButton.CreateRecordList<FileAccess>()"
                                  SelectedValue="@this.FileAccess.ToStringFromEnum()"
                                  ValueChanged="v => this.FileAccess = v.ToEnum<FileAccess>()!.Value"></InputFieldPanel_SelectButton>

    <span>@this.FileAccess.ToStringFromEnum()</span>

    <InputFieldPanel_Date Text="Date" Value="@this.Date"></InputFieldPanel_Date>
    <InputFieldPanel_DateDuration Text="Start-End" StartDate="@this.StartDate" EndDate="@this.EndDate"></InputFieldPanel_DateDuration>

    <InputFieldFlexPanel_Date Text="Date" Value="@this.Date"></InputFieldFlexPanel_Date>
    <InputFieldFlexPanel_DateDuration Text="Field4" StartDate="@this.StartDate" EndDate="@this.EndDate"></InputFieldFlexPanel_DateDuration>

    <InputFieldFlexPanel Text="User">
        <span class="textbox" tabindex="0">Higty</span>
    </InputFieldFlexPanel>

</div>


@code {
    [Parameter]
    public string Value1 { get; set; } = "";
    [Parameter]
    public string Value2 { get; set; } = "";
  
    [Parameter]
    public string Date { get; set; } = "";
    [Parameter]
    public string StartDate { get; set; } = "";
    [Parameter]
    public string EndDate { get; set; } = "";
    [Parameter]
    public FileAccess FileAccess { get; set; }
    [Parameter]
    public bool SelectDateCalendarPanelVisible { get; set; } = false;
    [Parameter]
    public bool SelectDateDurationCalendarPanelVisible { get; set; } = false;

    public void DateDurationSelected((DateOnly? StartDate, DateOnly? EndDate) value)
    {
        var v = value;
        if (v.StartDate.HasValue)
        {
            this.StartDate = v.StartDate.Value.ToShortDateString();
        }
        if (v.EndDate.HasValue)
        {
            this.EndDate = v.EndDate.Value.ToShortDateString();
        }
        this.SelectDateDurationCalendarPanelVisible = false;
    }

}