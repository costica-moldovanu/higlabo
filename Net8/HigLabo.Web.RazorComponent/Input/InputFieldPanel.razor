@{
    var className = this.Layout switch
    {
        InputFieldPanelLayout.Default => "input-field-panel",
        InputFieldPanelLayout.Flex => "input-field-flex-panel",
        _ => throw SwitchStatementNotImplementException.Create(this.Layout),
    };
}

<div class="@className" panel-type="@PanelType" name="@Name">
    @switch (this.Layout)
    {
        case InputFieldPanelLayout.Default:
            if (this.FieldNameVisible)
            {
                <div class="field-name-panel">
                    <div class="field-name">
                        <span class="text">@this.Text</span>
                    </div>
                    @if (this.AddIconVisible)
                    {
                        <div class="icon-panel" tabindex="0"
                             @onclick="async e => await this.AddIcon_Click()" @onclick:stopPropagation="true"
                             @onkeydown="async e => await this.AddIcon_Keydown(e)">
                            <img src="@UrlInfo.GetIconUrl(Higlabo__.Add__svg)" class="icon" />
                        </div>
                    }
                </div>
            }
            <div class="child-content-panel">@ChildContent</div>
            break;
        case InputFieldPanelLayout.Flex:
            <div class="display-flex">
                @if (this.FieldNameVisible)
                {
                    <div class="field-name">
                        <span class="text">@this.Text</span>
                    </div>
                }
                <div class="child-content-panel">@ChildContent</div>
            </div>
            break;
        default: throw SwitchStatementNotImplementException.Create(this.Layout);
    }
    @if (this.ValidateResult == false)
    {
        <div class="field-error-panel">@this.ValidateResult.Message</div>
    }
</div>



